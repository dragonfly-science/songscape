#!/bin/bash
# postinst script for songscape
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

set_dbconfig () {
    perl -i -e '$field=shift;$value=shift if (scalar(@ARGV)>1);$value||="";while (<>) { s/^(\s*"$field"\s*:\s*).*/$1$value,/; print; }' $1 $2 $3;
}

set_config () {
    perl -i -e '$field=shift;$value=shift if (scalar(@ARGV)>1);$value||="";while (<>) { s/^(\s*$field\s*=\s*).*/$1$value/; print; }' $1 $2 $3;
}

LOCAL_SETTINGS=/var/www/django/songscape/songscape/local_settings.py

case "$1" in
    configure)
        cp /var/www/django/songscape/songscape/local_settings.py.TEMPLATE ${LOCAL_SETTINGS}

        # Add config entries to $LOCAL_SETTINGS based on answers to debconf questions
        db_get songscape/db_host
        set_dbconfig HOST "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/db_port
        set_dbconfig PORT "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/db_name
        set_dbconfig NAME "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/db_user
        set_dbconfig USER "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/db_pass
        set_dbconfig PASSWORD "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/servername
        set_config SITE_URL "'https://${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/email_host
        set_config EMAIL_HOST "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/server_email
        set_config SERVER_EMAIL "'${RET}'" ${LOCAL_SETTINGS}

        db_get songscape/django_secret_key
        set_config SECRET_KEY "'${RET}'" ${LOCAL_SETTINGS}

        mkdir -p /var/log/sitelogs/songscape
        chown www-data:www-data /var/log/sitelogs/songscape

        #mkdir -p /var/www/django/songscape/uploaded
        #chown www-data:www-data  /var/www/django/songscape/uploaded

        # Make a copy of the template apache config to work on, then copy into place
        cp /etc/songscape/apache.conf.template /etc/songscape/apache.conf.working

        for MARKER in $(grep -o -E '__[A-Z0-9_]+__' /etc/songscape/apache.conf.working); do
            # Turns __MARKER__ into marker and puts packagename/ on the front
            DEBCONF_VAR=$(echo "${MARKER:2:${#MARKER}-4}" | tr '[:upper:]' '[:lower:]')
            db_get songscape/$DEBCONF_VAR
            sed -i -e "s/${MARKER}/${RET}/g" /etc/songscape/apache.conf.working
        done

        # Enable apache modules we want unconditionally
        a2enmod ssl > /dev/null 2>&1
        a2enmod deflate > /dev/null 2>&1
        a2enmod rewrite > /dev/null 2>&1
        a2enmod headers > /dev/null 2>&1

        # We a2ensite the site the first time the config is installed, but not after
        ENABLE_SITE=""
        if [ ! -e /etc/apache2/sites-available/songscape.conf ]; then
            ENABLE_SITE="true"
        fi

        # Use snakeoil keys if necessary
        db_get songscape/use_snakeoil_certs
        if [ "$RET" = true ]; then
            mkdir -p /etc/apache2/ssl/private
            db_get songscape/servername
            ln -sf /etc/ssl/certs/ssl-cert-snakeoil.pem /etc/apache2/ssl/${RET}.crt
            ln -sf /etc/ssl/private/ssl-cert-snakeoil.key /etc/apache2/ssl/private/${RET}.key
            sed -i -e's/SSLCertificateChainFile/#SSLCertificateChainFile/' /etc/songscape/apache.conf.working
        fi

        mv /etc/songscape/apache.conf.working /etc/apache2/sites-available/songscape.conf


        if [ "$ENABLE_SITE" != "" ]; then
            a2ensite songscape.conf
            a2dissite default
        fi

        # Install some handy python library
        pip install -r /etc/songscape/requirements.txt

        cd /var/www/django/songscape/
        python manage.py collectstatic --noinput

        echo ""
        echo "The songscape site is now ready for action. You need to restart apache for any"
        echo "configuration changes to take effect"
        echo ""
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

db_stop
exit 0
